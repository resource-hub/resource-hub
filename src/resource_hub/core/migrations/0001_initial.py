# Generated by Django 3.0.5 on 2020-04-17 18:09

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import model_utils.fields
import resource_hub.core.fields
import resource_hub.core.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, null=True)),
                ('slug', models.SlugField(unique=True)),
                ('image', models.ImageField(blank=True, default='images/default.png', null=True, upload_to='images/')),
                ('telephone_private', models.CharField(blank=True, max_length=20, null=True)),
                ('telephone_public', models.CharField(blank=True, max_length=20, null=True)),
                ('email_public', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('info_text', models.TextField(blank=True, null=True)),
                ('tax_id', models.CharField(blank=True, max_length=30, null=True)),
                ('vat_id', models.CharField(blank=True, max_length=30, null=True)),
                ('invoice_numbers_prefix', models.CharField(default='RH', max_length=5)),
                ('invoice_numbers_prefix_cancellations', models.CharField(default='CAN', max_length=5)),
                ('invoice_introductory_text', models.TextField(blank=True, default='', null=True)),
                ('invoice_additional_text', models.TextField(blank=True, default='', null=True)),
                ('invoice_footer_text', models.TextField(blank=True, default='', null=True)),
                ('invoice_logo_image', models.ImageField(blank=True, default='images/logo.png', null=True, upload_to='images/')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(blank=True, max_length=50, null=True)),
                ('street_number', models.CharField(blank=True, max_length=10, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=5, null=True)),
                ('city', models.CharField(blank=True, max_length=128, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['postal_code', 'street'],
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_holder', models.CharField(blank=True, max_length=128, null=True)),
                ('iban', models.CharField(blank=True, max_length=40, null=True)),
                ('bic', models.CharField(blank=True, max_length=11, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['bic', 'iban'],
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('state', models.CharField(choices=[('i', 'initializing'), ('p', 'pending'), ('w', 'waiting'), ('r', 'running'), ('d', 'disputing'), ('f', 'finalized'), ('x', 'expired'), ('c', 'canceled'), ('n', 'declined')], default='i', max_length=2)),
                ('state_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='state')),
                ('is_fixed_term', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContractProcedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('auto_accept', models.BooleanField(default=False)),
                ('terms_and_conditions', models.TextField(blank=True, null=True, verbose_name='terms and conditions')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('tax_rate', resource_hub.core.fields.PercentField(decimal_places=3, default=0, max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='tax rate applied in percent')),
                ('settlement_interval', models.IntegerField(choices=[(7, 'weekly'), (14, 'biweekly'), (30, 'monthly')], default=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Actor')),
            ],
        ),
        migrations.CreateModel(
            name='DeclarationOfIntent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(null=True)),
                ('ip_routable', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('prefix', models.CharField(db_index=True, max_length=160)),
                ('invoice_no', models.CharField(db_index=True, max_length=19)),
                ('full_invoice_no', models.CharField(db_index=True, max_length=190)),
                ('is_cancellation', models.BooleanField(default=False)),
                ('invoice_from_name', models.CharField(max_length=190, null=True)),
                ('invoice_from', models.TextField(null=True)),
                ('invoice_from_postal_code', models.CharField(max_length=190, null=True)),
                ('invoice_from_city', models.CharField(max_length=190, null=True)),
                ('invoice_from_country', django_countries.fields.CountryField(max_length=2, null=True)),
                ('invoice_from_tax_id', models.CharField(max_length=190, null=True)),
                ('invoice_from_vat_id', models.CharField(max_length=190, null=True)),
                ('invoice_to', models.TextField()),
                ('invoice_to_company', models.TextField(null=True)),
                ('invoice_to_name', models.TextField(null=True)),
                ('invoice_to_street', models.TextField(null=True)),
                ('invoice_to_postal_code', models.CharField(max_length=190, null=True)),
                ('invoice_to_city', models.TextField(null=True)),
                ('invoice_to_state', models.CharField(max_length=190, null=True)),
                ('invoice_to_country', django_countries.fields.CountryField(max_length=2, null=True)),
                ('invoice_to_vat_id', models.TextField(null=True)),
                ('invoice_to_beneficiary', models.TextField(null=True)),
                ('date', models.DateField(default=resource_hub.core.models.today)),
                ('locale', models.CharField(default='de', max_length=50)),
                ('introductory_text', models.TextField(blank=True)),
                ('additional_text', models.TextField(blank=True)),
                ('reverse_charge', models.BooleanField(default=False)),
                ('payment_provider_text', models.TextField(blank=True)),
                ('footer_text', models.TextField(blank=True)),
                ('foreign_currency_display', models.CharField(blank=True, max_length=50, null=True)),
                ('foreign_currency_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('foreign_currency_rate_date', models.DateField(blank=True, null=True)),
                ('shredded', models.BooleanField(default=False)),
                ('file', models.FileField(blank=True, max_length=255, null=True, upload_to=resource_hub.core.models.invoice_filename)),
                ('internal_reference', models.TextField(blank=True)),
                ('custom_field', models.CharField(max_length=255, null=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='core.Contract')),
                ('refers', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referred', to='core.Invoice')),
            ],
            options={
                'ordering': ('date', 'invoice_no'),
                'unique_together': {('contract', 'prefix', 'invoice_no')},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('actor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Actor')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('birth_date', models.DateField(null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('core.actor', models.Model),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('actor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Actor')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organization_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('core.actor',),
        ),
        migrations.CreateModel(
            name='SettlementLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='settlement_logs', to='core.Contract')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PriceProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=64)),
                ('discount', resource_hub.core.fields.PercentField(decimal_places=3, default=0, max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('addressee', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Actor')),
                ('contract_procedure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.ContractProcedure')),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=5, max_digits=15, verbose_name='Price')),
                ('currency', models.CharField(choices=[('EUR', 'Euro (EUR)')], default='EUR', max_length=5)),
                ('discounts', models.BooleanField(blank=True, default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('addressee', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Actor')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(choices=[('i', 'initializing'), ('p', 'pending'), ('w', 'waiting'), ('r', 'running'), ('d', 'disputing'), ('f', 'finalized'), ('x', 'expired'), ('c', 'canceled'), ('n', 'declined')], max_length=2)),
                ('name', models.CharField(max_length=64)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fee_absolute', models.BooleanField(default=False)),
                ('fee_value', models.DecimalField(decimal_places=3, default=0, max_digits=13)),
                ('fee_tax_rate', resource_hub.core.fields.PercentField(decimal_places=3, default=0, max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='tax rate applied to payement fee')),
                ('is_prepayment', models.BooleanField(default=False, help_text='If activated claims within the first settlement interval are charged immediatly')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Actor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('p', 'pending'), ('f', 'finalized'), ('fa', 'failed'), ('ca', 'canceled'), ('r', 'refunded')], max_length=2)),
                ('state_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='state')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='payment notes')),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.PaymentMethod')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(choices=[('c', 'created'), ('b', 'booked'), ('co', 'confirmed')], max_length=3)),
                ('target', models.CharField(max_length=255)),
                ('link', models.URLField()),
                ('level', models.CharField(choices=[(0, 'low'), (1, 'medium'), (2, 'high'), (3, 'critical')], max_length=3)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notification_recipient', to='core.Actor')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notification_sender', to='core.Actor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoicePosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=0)),
                ('item', models.CharField(max_length=255)),
                ('quantity', models.DecimalField(decimal_places=5, max_digits=15)),
                ('unit', models.CharField(max_length=5)),
                ('price', models.DecimalField(decimal_places=5, max_digits=15)),
                ('currency', models.CharField(default='EUR', max_length=5)),
                ('net', models.DecimalField(decimal_places=5, max_digits=15)),
                ('discount', resource_hub.core.fields.PercentField(decimal_places=3, default=0, max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('discounted_net', models.DecimalField(decimal_places=5, max_digits=15)),
                ('tax_rate', resource_hub.core.fields.PercentField(decimal_places=3, default=0, max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='tax rate applied in percent')),
                ('gross', models.DecimalField(decimal_places=5, max_digits=15)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='core.Invoice')),
            ],
            options={
                'ordering': ('position', 'pk'),
            },
        ),
        migrations.CreateModel(
            name='GalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='images/')),
                ('gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Gallery')),
            ],
        ),
        migrations.CreateModel(
            name='ContractTrigger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(choices=[('i', 'initializing'), ('p', 'pending'), ('w', 'waiting'), ('r', 'running'), ('d', 'disputing'), ('f', 'finalized'), ('x', 'expired'), ('c', 'canceled'), ('n', 'declined')], max_length=2)),
                ('name', models.CharField(max_length=64)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Actor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='contractprocedure',
            name='payment_methods',
            field=models.ManyToManyField(to='core.PaymentMethod'),
        ),
        migrations.AddField(
            model_name='contractprocedure',
            name='triggers',
            field=models.ManyToManyField(blank=True, related_name='procedure', to='core.ContractTrigger'),
        ),
        migrations.AddField(
            model_name='contract',
            name='acceptance',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contract_acceptance', to='core.DeclarationOfIntent'),
        ),
        migrations.AddField(
            model_name='contract',
            name='confirmation',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contract_confirmation', to='core.DeclarationOfIntent'),
        ),
        migrations.AddField(
            model_name='contract',
            name='contract_procedure',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.ContractProcedure'),
        ),
        migrations.AddField(
            model_name='contract',
            name='creditor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creditor', to='core.Actor'),
        ),
        migrations.AddField(
            model_name='contract',
            name='debitor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='debitor', to='core.Actor'),
        ),
        migrations.AddField(
            model_name='contract',
            name='payment_method',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.PaymentMethod'),
        ),
        migrations.AddField(
            model_name='contract',
            name='price_profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.PriceProfile'),
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('o', 'open'), ('c', 'closed')], default='o', max_length=3)),
                ('item', models.CharField(max_length=255)),
                ('quantity', models.DecimalField(decimal_places=5, max_digits=15)),
                ('unit', models.CharField(max_length=5)),
                ('price', models.DecimalField(decimal_places=5, max_digits=15)),
                ('currency', models.CharField(default='EUR', max_length=5)),
                ('net', models.DecimalField(decimal_places=5, max_digits=15)),
                ('discount', resource_hub.core.fields.PercentField(decimal_places=3, default=0, max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('discounted_net', models.DecimalField(decimal_places=5, max_digits=15)),
                ('tax_rate', resource_hub.core.fields.PercentField(decimal_places=3, default=0, max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='tax rate applied in percent')),
                ('gross', models.DecimalField(decimal_places=5, max_digits=15)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Contract')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='actor',
            name='address',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Address'),
        ),
        migrations.AddField(
            model_name='actor',
            name='bank_account',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.BankAccount'),
        ),
        migrations.CreateModel(
            name='OrganizationMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.IntegerField(choices=[(0, 'member'), (1, 'administrator'), (2, 'owner')], default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('organization', 'user')},
            },
        ),
        migrations.AddField(
            model_name='organization',
            name='members',
            field=models.ManyToManyField(through='core.OrganizationMember', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, default=0, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, default=0, max_digits=9)),
                ('image', models.ImageField(blank=True, default='images/default.png', null=True, upload_to='images/')),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Address')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Actor')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='gallery',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='declarationofintent',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contract',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contract_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bank_account_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='address',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='address_updated_by', to=settings.AUTH_USER_MODEL),
        ),
    ]
